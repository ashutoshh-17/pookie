symbol=input('Enter the symbol[1-5]:-');
p=input('Enter the symbol probability[0.1-0.5]:-');
[dict,avglen]=huffmandict(symbol,p);

code =dict;
for i = 1:length(code)
code{i,2} = num2str(code{i,2});
end
code

[m,k]=size(p);
Hx=0;
for c=1
   hx=p(c)*log2(1/p(c)); 
    Hx=Hx+hx;
end
disp('calculation of entropy');
disp(Hx);


disp('calculation of coding efficiency');
n1=(Hx/avglen);
Efficiency=n1*100


disp('calculation of redundancy');
Redundancy=1-n1

signal=input('Enter the symbols to be transmitted[1-5]:');
disp('symbols after encoding are:')
code = huffmanenco(signal,dict)
disp('Encoded signals after decoding are');
sig = huffmandeco(code,dict)
if(isequal(signal,sig))
disp('encoded signal is completely recovered');
else
    disp('encoded signal is not properly recovered');
end


Input:

Symbols: [1, 2, 3, 4, 5]
Probabilities: [0.1, 0.2, 0.3, 0.2, 0.2]

Transmit signal :[1, 2, 3, 4, 5]

